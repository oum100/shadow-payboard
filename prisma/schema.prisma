generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Merchants{
    id              String          @id @default(auto()) @map("_id") @db.ObjectId
    merchantCode    String          @unique
    name            String
    secretKey       String?
    device          Devices[]
    createdAt       DateTime        @db.Date @default(now())
    updatedAt       DateTime?       @updatedAt     
}

model Devices{
    id              String          @id @default(auto()) @map("_id") @db.ObjectId 
    deviceName      String
    uuid            String          @unique
    macAddr         String
    type            String
    status          String
    merchant        Merchants       @relation(fields: [merchantCode], references: [merchantCode], onDelete:Cascade, onUpdate:Cascade)
    merchantCode    String          
    branch          Branchs?         @relation(fields:[branchCode], references: [branchCode])
    branchCode      String
    machineSN       Machines?
    product         Products[]
    transaction     Transactions[]     
    createdAt       DateTime        @db.Date @default(now())
    updatedAt       DateTime?       @updatedAt        
}



model Machines {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  serialNumber  String?       @unique(map: "serialNumber")
  type          MachineType?  
  model         String?       
  orderAt       DateTime?     @db.Date
  expireAt      DateTime?     @db.Date
  device        Devices?     @relation(fields:[deviceUuid], references:[uuid], onUpdate:Cascade)
  deviceUuid    String?      @unique
  createdAt     DateTime      @db.Date @default(now())
  updatedAt     DateTime?     @updatedAt  
}

enum MachineType {
  WASHER
  DRYER
  WATER
  FUEL
  TOY
  UNDEFINED
  NULL
}

model Branchs{
  id                                String      @id @default(auto()) @map("_id") @db.ObjectId
  branchCode                        String      @unique(map: "branchCode")
  branchName                        String?
  appKey                            String?
  appSecret                         String?
  device                            Devices[]
  transaction                       Transactions[]
}

model Products{
    id              String          @id @default(auto()) @map("_id") @db.ObjectId 
    sku             String      
    price           Int
    qty             Int
    unit            String
    device          Devices  	    @relation(fields: [deviceUuid], references: [uuid], onUpdate:Cascade)
    deviceUuid      String
    createdAt       DateTime        @db.Date @default(now())
    updatedAt       DateTime?       @updatedAt 
}

model Transactions{
    id              String          @id @default(auto()) @map("_id") @db.ObjectId 
    branch          Branchs?        @relation(fields:[branchCode], references:[branchCode], onDelete:SetNull, onUpdate:Cascade)
    branchCode      String?  
    order           String          
    paymentId       String?
    paymentBy       String?
    device          Devices  	      @relation(fields: [deviceUuid], references: [uuid], onUpdate:Cascade)
    deviceUuid      String
    amount          Int
    status          String
    jobState        String?
    createdAt       DateTime        @db.Date @default(now())
    updatedAt       DateTime?       @updatedAt 
}

